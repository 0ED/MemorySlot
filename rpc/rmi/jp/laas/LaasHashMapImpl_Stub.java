// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package jp.laas;

public final class LaasHashMapImpl_Stub
    extends java.rmi.server.RemoteStub
    implements jp.laas.LaasHashMap
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_clear_0;
    private static java.lang.reflect.Method $method_containsKey_1;
    private static java.lang.reflect.Method $method_containsValue_2;
    private static java.lang.reflect.Method $method_entrySet_3;
    private static java.lang.reflect.Method $method_get_4;
    private static java.lang.reflect.Method $method_isEmpty_5;
    private static java.lang.reflect.Method $method_keySet_6;
    private static java.lang.reflect.Method $method_put_7;
    private static java.lang.reflect.Method $method_putAll_8;
    private static java.lang.reflect.Method $method_remove_9;
    private static java.lang.reflect.Method $method_setConstructorByLaas_10;
    private static java.lang.reflect.Method $method_setConstructorByLaas_11;
    private static java.lang.reflect.Method $method_setConstructorByLaas_12;
    private static java.lang.reflect.Method $method_setConstructorByLaas_13;
    private static java.lang.reflect.Method $method_size_14;
    private static java.lang.reflect.Method $method_values_15;
    
    static {
	try {
	    $method_clear_0 = jp.laas.LaasHashMap.class.getMethod("clear", new java.lang.Class[] {});
	    $method_containsKey_1 = jp.laas.LaasHashMap.class.getMethod("containsKey", new java.lang.Class[] {java.lang.Object.class});
	    $method_containsValue_2 = jp.laas.LaasHashMap.class.getMethod("containsValue", new java.lang.Class[] {java.lang.Object.class});
	    $method_entrySet_3 = jp.laas.LaasHashMap.class.getMethod("entrySet", new java.lang.Class[] {});
	    $method_get_4 = jp.laas.LaasHashMap.class.getMethod("get", new java.lang.Class[] {java.lang.Object.class});
	    $method_isEmpty_5 = jp.laas.LaasHashMap.class.getMethod("isEmpty", new java.lang.Class[] {});
	    $method_keySet_6 = jp.laas.LaasHashMap.class.getMethod("keySet", new java.lang.Class[] {});
	    $method_put_7 = jp.laas.LaasHashMap.class.getMethod("put", new java.lang.Class[] {java.lang.Object.class, java.lang.Object.class});
	    $method_putAll_8 = jp.laas.LaasHashMap.class.getMethod("putAll", new java.lang.Class[] {java.util.Map.class});
	    $method_remove_9 = jp.laas.LaasHashMap.class.getMethod("remove", new java.lang.Class[] {java.lang.Object.class});
	    $method_setConstructorByLaas_10 = jp.laas.LaasHashMap.class.getMethod("setConstructorByLaas", new java.lang.Class[] {});
	    $method_setConstructorByLaas_11 = jp.laas.LaasHashMap.class.getMethod("setConstructorByLaas", new java.lang.Class[] {int.class});
	    $method_setConstructorByLaas_12 = jp.laas.LaasHashMap.class.getMethod("setConstructorByLaas", new java.lang.Class[] {int.class, float.class});
	    $method_setConstructorByLaas_13 = jp.laas.LaasHashMap.class.getMethod("setConstructorByLaas", new java.lang.Class[] {java.util.Map.class});
	    $method_size_14 = jp.laas.LaasHashMap.class.getMethod("size", new java.lang.Class[] {});
	    $method_values_15 = jp.laas.LaasHashMap.class.getMethod("values", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public LaasHashMapImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of clear()
    public void clear()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_clear_0, null, -7475254351993695499L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of containsKey(Object)
    public boolean containsKey(java.lang.Object $param_Object_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_containsKey_1, new java.lang.Object[] {$param_Object_1}, -3172792759261346218L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of containsValue(Object)
    public boolean containsValue(java.lang.Object $param_Object_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_containsValue_2, new java.lang.Object[] {$param_Object_1}, -5617627161944783780L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of entrySet()
    public java.util.Set entrySet()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_entrySet_3, null, -7629022308093071445L);
	    return ((java.util.Set) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of get(Object)
    public java.lang.Object get(java.lang.Object $param_Object_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_get_4, new java.lang.Object[] {$param_Object_1}, 6832719500409870279L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of isEmpty()
    public boolean isEmpty()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_isEmpty_5, null, 9136275027625107786L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of keySet()
    public java.util.Set keySet()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_keySet_6, null, -3654007840389775963L);
	    return ((java.util.Set) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of put(Object, Object)
    public java.lang.Object put(java.lang.Object $param_Object_1, java.lang.Object $param_Object_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_put_7, new java.lang.Object[] {$param_Object_1, $param_Object_2}, 343023290247182271L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of putAll(Map)
    public void putAll(java.util.Map $param_Map_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_putAll_8, new java.lang.Object[] {$param_Map_1}, 6292447698899276240L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(Object)
    public java.lang.Object remove(java.lang.Object $param_Object_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_remove_9, new java.lang.Object[] {$param_Object_1}, 7236030930369834760L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setConstructorByLaas()
    public void setConstructorByLaas()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setConstructorByLaas_10, null, 5178069097310670101L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setConstructorByLaas(int)
    public void setConstructorByLaas(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setConstructorByLaas_11, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 5629911320505232985L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setConstructorByLaas(int, float)
    public void setConstructorByLaas(int $param_int_1, float $param_float_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setConstructorByLaas_12, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Float($param_float_2)}, -3539826791490351230L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setConstructorByLaas(Map)
    public void setConstructorByLaas(java.util.Map $param_Map_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setConstructorByLaas_13, new java.lang.Object[] {$param_Map_1}, -7433036175144190300L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of size()
    public int size()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_size_14, null, 4495240443643581991L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of values()
    public java.util.Collection values()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_values_15, null, -2518452077531405751L);
	    return ((java.util.Collection) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
